#pragma once
class sort
{
//===========================================================================================================	

	//Сортировка пузырьком
	template< class T >
	void bubbleSort(T* arr, int size)
	{
		T tmp;

		for (int i = 0; i < size - 1; ++i) // i - номер прохода
		{
			for (int j = 0; j < size - 1; ++j) // внутренний цикл прохода
			{
				if (arr[j + 1] < arr[j])
				{
					tmp = arr[j + 1];
					arr[j + 1] = arr[j];
					arr[j] = tmp;
				}
			}
		}
	}

//===========================================================================================================

	//Сортировка вставками
	template< class T >
	void insertSort(T* a, int size)
	{
		T tmp;
		for (int i = 1, j; i < size; ++i) // цикл проходов, i - номер прохода
		{
			tmp = a[i];
			for (j = i - 1; j >= 0 && a[j] > tmp; --j) // поиск места элемента в готовой последовательности 
				a[j + 1] = a[j];    // сдвигаем элемент направо, пока не дошли
			a[j + 1] = tmp; // место найдено, вставить элемент    
		}
	}

//===========================================================================================================

	//Сортировка методом выбора
	template< class T >
	void selectSort(T* arr, int size)
	{
		T tmp;
		for (int i = 0; i < size; ++i) // i - номер текущего шага
		{
			int pos = i;
			tmp = arr[i];
			for (int j = i + 1; j < size; ++j) // цикл выбора наименьшего элемента
			{
				if (arr[j] < tmp)
				{
					pos = j;
					tmp = arr[j];
				}
			}
			arr[pos] = arr[i];
			arr[i] = tmp; // меняем местами наименьший с a[i]
		}
	}

//===========================================================================================================
};

