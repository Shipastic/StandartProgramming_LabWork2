//===================================== Сортировка пузырьком ===============================================	
void bubbleSort(int myArr[], int size)
{
	int tmp;
	for (int i = 0; i < size - 1; ++i) // i - номер прохода
	{
		for (int j = 0; j < size - 1; ++j) // внутренний цикл прохода
		{
			if (myArr[j + 1] < myArr[j])
			{
				tmp = myArr[j + 1];
				myArr[j + 1] = myArr[j];
				myArr[j] = tmp;
			}
		}
	}
}


//======================================= Сортировка вставками ==============================================
void insertSort(int ar[], int size)
{
	int tmp;
	for (int i = 1, j; i < size; ++i) // цикл проходов, i - номер прохода
	{
		tmp = ar[i];
		for (j = i - 1; j >= 0 && ar[j] > tmp; --j) // поиск места элемента в готовой последовательности 
			ar[j + 1] = ar[j];    // сдвигаем элемент направо, пока не дошли
		ar[j + 1] = tmp; // место найдено, вставить элемент    
	}
}


//================================== Сортировка методом выбора ===============================================
void selectSort(int arr[], int size, int i)
{
	if (i < size)
	{
		int min = arr[i];
		int index = i;

		for (int j = i + 1; j < size; j++)
			if (arr[j] < min)
				min = arr[j],
				index = j;

		arr[index] = arr[i];
		arr[i] = min;

		selectSort(arr, size, i + 1);
	}
}
//===========================================================================================================